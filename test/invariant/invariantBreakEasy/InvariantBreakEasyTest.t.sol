// SPDX-License-Identifier: MIT
pragma solidity 0.8.20;

import {Test} from "forge-std/Test.sol";
import {StdInvariant} from "forge-std/StdInvariant.sol";
import {InvariantBreakEasy} from "../../../src/invariant-break/InvariantBreakEasy.sol";

contract InvariantBreakEasyTest is StdInvariant, Test {
    InvariantBreakEasy public invariantBreakEasy;

    function setUp() public {
        invariantBreakEasy = new InvariantBreakEasy();
        targetContract(address(invariantBreakEasy));
    }

    function testFuzzPassesEasyInvariant(uint128 randomNumber) public {
        invariantBreakEasy.doMoreMathAgain(randomNumber);
        assert(invariantBreakEasy.storedValue() != 0);
    }

    // Stateful fuzz
    function invariant_testMathDoesntReturnZero() public view {
        assert(invariantBreakEasy.storedValue() != 0);
    }
}
